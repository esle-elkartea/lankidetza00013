package net.idtoki.aveobras.helper;

import net.zylk.web.WebUtils;
import net.zylk.web.helper.BaseHelper;
import javax.servlet.http.HttpServletRequest;
import org.apache.torque.TorqueException;
import net.zylk.tools.format.FormatUtils;


import net.idtoki.aveobras.model.LocalidadesPeer;
import net.idtoki.aveobras.model.Localidades;
import net.idtoki.aveobras.manager.LocalidadesManager;

/**
 * This class was autogenerated by Torque on:
 *
 * [Wed Oct 25 17:01:04 CEST 2006]
 *
 */
public abstract class BaseLocalidadesHelper extends BaseHelper
{
	public static final String COMPLEX_ID_GET_METHOD = "getComplexId";
	private Localidades obj;
	public static final String IDLOCALIDAD_GET_METHOD_NAME = "getIdlocalidad";
	public static final String IDPROVINCIA_GET_METHOD_NAME = "getIdprovincia";
	public static final String NOMBRE_GET_METHOD_NAME = "getNombre";


	public BaseLocalidadesHelper()
	{
		this.obj = new Localidades();
	}

	public BaseLocalidadesHelper(Localidades obj)
	{
		this.obj = obj;
	}


	public String getIdlocalidadHTMLAttrs()
	{
		return " name=\"" + getIdlocalidadName() + "\" " +
			   "id=\"" + getIdlocalidadId() + "\" " +
			   "value=\"" + getIdlocalidadValue() + "\" ";
	 }

	public String getIdlocalidadId()
	{
		return getIdlocalidadId(obj);
	}

	private static String getIdlocalidadId(Localidades o)
	{
		return LocalidadesPeer.IDLOCALIDAD;
	}

	public String getIdlocalidadName()
	{
		return getIdlocalidadName(obj);
	}

	private static String getIdlocalidadName(Localidades o)
	{
		return LocalidadesPeer.IDLOCALIDAD;
	}

	public String getIdlocalidadValue()
	{
		return getIdlocalidadValue(obj);
	}

	private static String getIdlocalidadValue(Localidades o)
	{
			return "" + o.getIdlocalidad();
		}

	public String getIdprovinciaHTMLAttrs()
	{
		return " name=\"" + getIdprovinciaName() + "\" " +
			   "id=\"" + getIdprovinciaId() + "\" " +
			   "value=\"" + getIdprovinciaValue() + "\" ";
	 }

	public String getIdprovinciaId()
	{
		return getIdprovinciaId(obj);
	}

	private static String getIdprovinciaId(Localidades o)
	{
		return LocalidadesPeer.IDPROVINCIA;
	}

	public String getIdprovinciaName()
	{
		return getIdprovinciaName(obj);
	}

	private static String getIdprovinciaName(Localidades o)
	{
		return LocalidadesPeer.IDPROVINCIA;
	}

	public String getIdprovinciaValue()
	{
		return getIdprovinciaValue(obj);
	}

	private static String getIdprovinciaValue(Localidades o)
	{
			return "" + o.getIdprovincia();
		}

	public String getNombreHTMLAttrs()
	{
		return " name=\"" + getNombreName() + "\" " +
			   "id=\"" + getNombreId() + "\" " +
			   "value=\"" + getNombreValue() + "\" ";
	 }

	public String getNombreId()
	{
		return getNombreId(obj);
	}

	private static String getNombreId(Localidades o)
	{
		return LocalidadesPeer.NOMBRE;
	}

	public String getNombreName()
	{
		return getNombreName(obj);
	}

	private static String getNombreName(Localidades o)
	{
		return LocalidadesPeer.NOMBRE;
	}

	public String getNombreValue()
	{
		return getNombreValue(obj);
	}

	private static String getNombreValue(Localidades o)
	{
			if(o.getNombre() != null)
			return "" + o.getNombre();
		else
			return "";
		}

	public static Localidades getLocalidades(HttpServletRequest req) throws TorqueException
	{
										
		int id_Idlocalidad = WebUtils.getintParam(req, getIdlocalidadName(new Localidades()));

	
		Localidades o = new Localidades();
		if((id_Idlocalidad >= 0)) // no es nuevo y lo fijamos en el objeto
		{
			o = LocalidadesManager.getLocalidades(id_Idlocalidad);
		}
		return o;
	}

	public static Localidades createObj(HttpServletRequest req) throws TorqueException
	{
		Localidades o =  BaseLocalidadesHelper.getLocalidades(req);
			 o.setIdlocalidad(WebUtils.getintParam(req, getIdlocalidadName(o)));
		
			 		o.setIdprovincia(Integer.parseInt(FormatUtils.getFkIdFromString(WebUtils.getStringParam(req, getIdprovinciaName(o)))));
		
			 o.setNombre(WebUtils.getStringParam(req, getNombreName(o)));
		
			return o;
	}
}
