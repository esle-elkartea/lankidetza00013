package net.idtoki.aveobras.helper;

import net.zylk.web.WebUtils;
import net.zylk.web.helper.BaseHelper;
import javax.servlet.http.HttpServletRequest;
import org.apache.torque.TorqueException;
import net.zylk.tools.format.FormatUtils;


import net.idtoki.aveobras.model.ProvinciasPeer;
import net.idtoki.aveobras.model.Provincias;
import net.idtoki.aveobras.manager.ProvinciasManager;

/**
 * This class was autogenerated by Torque on:
 *
 * [Wed Oct 25 17:01:04 CEST 2006]
 *
 */
public abstract class BaseProvinciasHelper extends BaseHelper
{
	public static final String COMPLEX_ID_GET_METHOD = "getComplexId";
	private Provincias obj;
	public static final String IDPROVINCIA_GET_METHOD_NAME = "getIdprovincia";
	public static final String NOMBRE_GET_METHOD_NAME = "getNombre";


	public BaseProvinciasHelper()
	{
		this.obj = new Provincias();
	}

	public BaseProvinciasHelper(Provincias obj)
	{
		this.obj = obj;
	}


	public String getIdprovinciaHTMLAttrs()
	{
		return " name=\"" + getIdprovinciaName() + "\" " +
			   "id=\"" + getIdprovinciaId() + "\" " +
			   "value=\"" + getIdprovinciaValue() + "\" ";
	 }

	public String getIdprovinciaId()
	{
		return getIdprovinciaId(obj);
	}

	private static String getIdprovinciaId(Provincias o)
	{
		return ProvinciasPeer.IDPROVINCIA;
	}

	public String getIdprovinciaName()
	{
		return getIdprovinciaName(obj);
	}

	private static String getIdprovinciaName(Provincias o)
	{
		return ProvinciasPeer.IDPROVINCIA;
	}

	public String getIdprovinciaValue()
	{
		return getIdprovinciaValue(obj);
	}

	private static String getIdprovinciaValue(Provincias o)
	{
			return "" + o.getIdprovincia();
		}

	public String getNombreHTMLAttrs()
	{
		return " name=\"" + getNombreName() + "\" " +
			   "id=\"" + getNombreId() + "\" " +
			   "value=\"" + getNombreValue() + "\" ";
	 }

	public String getNombreId()
	{
		return getNombreId(obj);
	}

	private static String getNombreId(Provincias o)
	{
		return ProvinciasPeer.NOMBRE;
	}

	public String getNombreName()
	{
		return getNombreName(obj);
	}

	private static String getNombreName(Provincias o)
	{
		return ProvinciasPeer.NOMBRE;
	}

	public String getNombreValue()
	{
		return getNombreValue(obj);
	}

	private static String getNombreValue(Provincias o)
	{
			if(o.getNombre() != null)
			return "" + o.getNombre();
		else
			return "";
		}

	public static Provincias getProvincias(HttpServletRequest req) throws TorqueException
	{
										
		int id_Idprovincia = WebUtils.getintParam(req, getIdprovinciaName(new Provincias()));

	
		Provincias o = new Provincias();
		if((id_Idprovincia >= 0)) // no es nuevo y lo fijamos en el objeto
		{
			o = ProvinciasManager.getProvincias(id_Idprovincia);
		}
		return o;
	}

	public static Provincias createObj(HttpServletRequest req) throws TorqueException
	{
		Provincias o =  BaseProvinciasHelper.getProvincias(req);
			 o.setIdprovincia(WebUtils.getintParam(req, getIdprovinciaName(o)));
		
			 o.setNombre(WebUtils.getStringParam(req, getNombreName(o)));
		
			return o;
	}
}
