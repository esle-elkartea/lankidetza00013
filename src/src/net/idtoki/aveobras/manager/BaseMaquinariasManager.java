package net.idtoki.aveobras.manager;

import java.util.logging.Logger;
import net.idtoki.aveobras.model.MaquinariasPeer;
import net.idtoki.aveobras.group.MaquinariasGroupBean;
import net.idtoki.aveobras.model.Maquinarias;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;



import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Wed Oct 25 17:01:04 CEST 2006]
 *
 */
public abstract class BaseMaquinariasManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.aveobras.managers.BaseMaquinariasManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new MaquinariasManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new MaquinariasManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new MaquinariasManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = MaquinariasManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = MaquinariasManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.IDMAQUINARIA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.IDMAQUINARIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.IDMAQUINARIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.IDMAQUINARIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.IDMAQUINARIA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.NOMBRE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.REFERENCIA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.REFERENCIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.REFERENCIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.REFERENCIA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.REFERENCIA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.BASTIDOR)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.BASTIDOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.BASTIDOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.BASTIDOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.BASTIDOR,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.MATRICULA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.MATRICULA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.FECHAALTA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.FECHAALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.FECHAALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.FECHAALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.FECHAALTA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.FECHABAJA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.FECHABAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.FECHABAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.FECHABAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.FECHABAJA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.RESPONSABLE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.RESPONSABLE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.COSTE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.COSTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.COSTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.COSTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.COSTE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.MODELO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.MODELO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.MODELO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.MODELO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.MODELO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.MARCA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.MARCA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.MARCA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.MARCA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.MARCA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.TIPO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.TIPO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.TIPO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.TIPO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.TIPO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.ALQUILADO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.ALQUILADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.ALQUILADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.ALQUILADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.ALQUILADO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(MaquinariasPeer.OBSERVACIONES)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,MaquinariasPeer.OBSERVACIONES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,MaquinariasPeer.OBSERVACIONES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,MaquinariasPeer.OBSERVACIONES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,MaquinariasPeer.OBSERVACIONES,valor,true);
		}
		
		return criterion;
	}

	public static final MaquinariasGroupBean getMaquinariass() {
    	return BaseMaquinariasManager.getMaquinariass(false);
	}

	public static final MaquinariasGroupBean getMaquinariass(boolean paginado) {
    	return BaseMaquinariasManager.getMaquinariass(new Criteria(), paginado,0);
	}

	public static final MaquinariasGroupBean getMaquinariass(Criteria c) {
		return BaseMaquinariasManager.getMaquinariass(c,false,0);
	}

	public static final MaquinariasGroupBean getMaquinariass(Criteria criteria,boolean paginado, int pagina) {
		MaquinariasGroupBean objMaquinariasGroupBean = new MaquinariasGroupBean();
		objMaquinariasGroupBean.setPaginaActual(pagina);
		objMaquinariasGroupBean.setMaquinariass(criteria, paginado);
		return objMaquinariasGroupBean;
	}

							
	public static final Maquinarias getMaquinarias(int id_Idmaquinaria) {
		Criteria c = new Criteria();
			c.add(MaquinariasPeer.IDMAQUINARIA, id_Idmaquinaria);
			return BaseMaquinariasManager.MaquinariassGroupBean2Maquinarias(BaseMaquinariasManager.getMaquinariass(c));
	}

	public static final Maquinarias MaquinariassGroupBean2Maquinarias(MaquinariasGroupBean obj){
		if(obj.size() == 1)
			return obj.getMaquinarias(0);
		else
			return null;
	}

	private static void updateMaquinariasAttribute(int id_Idmaquinaria, String valor, String campo) throws Exception
	{
		Maquinarias obj = BaseMaquinariasManager.getMaquinarias(id_Idmaquinaria);
			if(campo.equals(MaquinariasPeer.IDMAQUINARIA))
					obj.setIdmaquinaria(Integer.parseInt(valor)); //int
					if(campo.equals(MaquinariasPeer.NOMBRE))
					obj.setNombre(valor); //String
					if(campo.equals(MaquinariasPeer.REFERENCIA))
					obj.setReferencia(valor); //String
					if(campo.equals(MaquinariasPeer.BASTIDOR))
					obj.setBastidor(valor); //String
					if(campo.equals(MaquinariasPeer.MATRICULA))
					obj.setMatricula(valor); //String
					if(campo.equals(MaquinariasPeer.FECHAALTA))
					obj.setFechaalta(valor); //String
					if(campo.equals(MaquinariasPeer.FECHABAJA))
					obj.setFechabaja(valor); //String
					if(campo.equals(MaquinariasPeer.RESPONSABLE))
					obj.setResponsable(valor); //String
					if(campo.equals(MaquinariasPeer.COSTE))
					obj.setCoste(Double.parseDouble(valor)); //double
					if(campo.equals(MaquinariasPeer.MODELO))
					obj.setModelo(valor); //String
					if(campo.equals(MaquinariasPeer.MARCA))
					obj.setMarca(valor); //String
					if(campo.equals(MaquinariasPeer.TIPO))
					obj.setTipo(valor); //String
					if(campo.equals(MaquinariasPeer.ALQUILADO))
					obj.setAlquilado(Integer.parseInt(valor)); //int
					if(campo.equals(MaquinariasPeer.OBSERVACIONES))
					obj.setObservaciones(valor); //String
					obj.save();
	}

	public static void updateIdmaquinaria(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.IDMAQUINARIA);
	}
	public static void updateNombre(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.NOMBRE);
	}
	public static void updateReferencia(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.REFERENCIA);
	}
	public static void updateBastidor(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.BASTIDOR);
	}
	public static void updateMatricula(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.MATRICULA);
	}
	public static void updateFechaalta(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.FECHAALTA);
	}
	public static void updateFechabaja(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.FECHABAJA);
	}
	public static void updateResponsable(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.RESPONSABLE);
	}
	public static void updateCoste(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.COSTE);
	}
	public static void updateModelo(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.MODELO);
	}
	public static void updateMarca(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.MARCA);
	}
	public static void updateTipo(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.TIPO);
	}
	public static void updateAlquilado(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.ALQUILADO);
	}
	public static void updateObservaciones(int id_Idmaquinaria, String valor) throws Exception
	{
		updateMaquinariasAttribute(id_Idmaquinaria, valor, MaquinariasPeer.OBSERVACIONES);
	}

			public void addJoins(Criteria criteria)
	{
	 //no tiene claves externas asi que el metodo no hace nada
	}
	

  public static void deleteMaquinarias(int id_Idmaquinaria) throws TorqueException
  {
  	MaquinariasPeer.doDelete(MaquinariasManager.getMaquinarias(id_Idmaquinaria));
  }

  public static Maquinarias addUpdateMaquinarias(Maquinarias obj) throws TorqueException
  {
	MaquinariasGroupBean gb = new MaquinariasGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

