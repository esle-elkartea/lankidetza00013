package net.idtoki.aveobras.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.ResourceBundle;
import java.util.logging.Logger;

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamSource;

import net.idtoki.aveobras.group.CapitulosGroupBean;
import net.idtoki.aveobras.group.SubcapitulosGroupBean;
import net.idtoki.aveobras.helper.CapitulosHelper;
import net.idtoki.aveobras.helper.SubcapitulosHelper;
import net.idtoki.aveobras.helper.UejecucionesHelper;
import net.idtoki.aveobras.manager.CapitulosManager;
import net.idtoki.aveobras.manager.SubcapitulosManager;
import net.idtoki.aveobras.model.CapitulosPeer;
import net.idtoki.aveobras.model.Subcapitulos;
import net.idtoki.aveobras.model.SubcapitulosPeer;
import net.zylk.tools.ajax.AjaxUtils;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;
import net.zylk.tools.pdf.PdfUtils;
import net.zylk.tools.xml.XmlUtils;
import net.zylk.torque.TorqueUtils;
import net.zylk.web.WebUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Apr 19 12:33:52 CEST 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class SubcapitulosController
    extends net.idtoki.aveobras.controller.BaseSubcapitulosController
{
 private static final Logger logger = Logger.getLogger("net.idtoki.aveobras.controller.SubcapitulosController");
 private TransformerFactory tFactory = TransformerFactory.newInstance();
 private Transformer subcapitulo_transformer = null; 
 private Transformer subcapitulos_transformer = null;   

 public void init(ServletConfig config)
 {
  super.init();
  ResourceBundle resource = ResourceBundle.getBundle("net/idtoki/aveobras/app/config/app-config");
  ServletContext context = config.getServletContext();
  File subcapitulo = new File(resource.getString("app.xsl.templates.dir")+"/PdfSubcapitulo.xslt");
  Source xslSource = new StreamSource(subcapitulo);
  File subcapitulos = new File(resource.getString("app.xsl.templates.dir")+"/PdfListaSubcapitulo.xslt");
  Source xslSourceT = new StreamSource(subcapitulos); 	  
  try{
	  subcapitulo_transformer = tFactory.newTransformer(xslSource);
	  subcapitulos_transformer = tFactory.newTransformer(xslSourceT);
  }catch (Exception e){
    e.printStackTrace();
  }  
 }
 
 public void serviceAddSubcapitulos(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
		//recojo los parametros del formulario y doy de alta un nuevo Cliente
	 try
	 {
		 utf8RequestService(request);
		 Subcapitulos cl = SubcapitulosHelper.createObj(request);
		 SubcapitulosGroupBean cgb = new SubcapitulosGroupBean();
		 cgb.setElemento(cl);
		 cgb.save();
	 }
	 catch(TorqueException te)
	 {
		 response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	 }
 }
 
 public StringBuffer replaceStringBuffer (StringBuffer strBA, String strOrigen, String strDestino) 
 {
	 return new StringBuffer(strBA.toString().replaceAll(strOrigen,strDestino));
 } 
 
 private Criteria ordenacion(Criteria c,String CampoOrdenacion,String OrdenOrdenacion) 
 { 
 	if((OrdenOrdenacion != null )&& (OrdenOrdenacion.compareTo("ASC")==0))
 		if ((CampoOrdenacion != null)) //&& (CampoOrdenacion.compareTo("nombre")==0))
 		{
 			//c.clear();
 			c.addAscendingOrderByColumn(CampoOrdenacion.toString());
 		}
 	if  ((OrdenOrdenacion != null) && (OrdenOrdenacion.compareTo("DESC")==0))
 		if ((CampoOrdenacion != null)) //&& (CampoOrdenacion.compareTo("nombre")==0))
 			{
 			//c.clear();
 			c.addDescendingOrderByColumn(CampoOrdenacion.toString());
 		}
 	return c;
 }

 private Criteria criteriaSubcapitulosTableContent(HttpServletRequest request,Criteria c) throws IOException, ServletException
 {
	  String param =  WebUtils.getStringParam(request, new CapitulosHelper().getIdcapituloName());
	  if(param != null)
			 TorqueUtils.addEqualCriteria(c,SubcapitulosPeer.IDCAPITULO,param);		 
 	  String paramSortCol =  WebUtils.getStringParam(request, "sort_col");
 	  String paramSortDir =  WebUtils.getStringParam(request, "sort_dir");
 	  //System.out.println("----query:"+paramQuery+"----col:"+paramSortCol+"----dir:"+paramSortDir+"----filtro:"+paramFiltro);
 	  c = ordenacion(c,paramSortCol,paramSortDir);

 	  return c;
 }  
 
 public void  serviceSubcapitulosTableContent(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 utf8RequestService(request);
	 int numElemPedidosBD = 40;
	 int gap = 0;//gap = viewedRows - numElemVisiblesUltPag	  
	 DinamicGridBean dgb = WebUtils.getDinamicGridBeanParam(request,numElemPedidosBD,gap); 
	 Criteria c =SubcapitulosManager.buildSearchCriteria(dgb); 
	 c =criteriaSubcapitulosTableContent(request,c);
	 
	 SubcapitulosGroupBean cgb = SubcapitulosManager.getSubcapituloss(c);
	 dgb.setTotalSize(cgb.getTotalSize());
	  
	 String[] methodos= new String[] {
			 SubcapitulosHelper.REFERENCIA_GET_METHOD_NAME+"SubcapitulosParsed",
			 SubcapitulosHelper.NOMBRE_GET_METHOD_NAME+"SubcapitulosParsed",
			 SubcapitulosHelper.IDCAPITULO_GET_METHOD_NAME+"SubcapitulosParsed",
				"getEditSubcapitulos",
				"getDeleteSubcapitulos"
				};
	  
	 xmlResponseService(response,AjaxUtils.buildXmlAjaxResponseTableContentFromListObj(
			  										cgb.getAlmacen(),
			  										methodos,
			  										SubcapitulosHelper.IDSUBCAPITULO_GET_METHOD_NAME, dgb,"ISO-8859-1")); 
 }
 
 public void serviceSubcapitulosUlContent(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 utf8RequestService(request);
	 String[] methodos= new String[] {
			 SubcapitulosHelper.IDSUBCAPITULO_GET_METHOD_NAME, 
			 SubcapitulosHelper.NOMBRE_GET_METHOD_NAME+"SubcapitulosParsed",
			 SubcapitulosHelper.IDCAPITULO_GET_METHOD_NAME+"SubcapitulosParsed"
};
	 String param =  WebUtils.getStringParam(request, "value");
	 if(param==null || param.length() <= 0)
			 param =  WebUtils.getStringParam(request, new UejecucionesHelper().getIdsubcapituloName());	 
	 SubcapitulosGroupBean cgb = SubcapitulosManager.getSubcapituloss(SubcapitulosManager.buildSearchCriteria(param));
	 simpleResponseService(response, AjaxUtils.buildAjaxULContentFromListObj(cgb.getAlmacen(),methodos, SubcapitulosHelper.COMPLEX_ID_GET_METHOD,"Subcapitulos"));
 }
 
 protected StringBuffer updateIdcapituloResponseCallBack(String s)
 {
  ArrayList a = AjaxUtils.splitIdFields(s);
    	return new StringBuffer(SubcapitulosManager.getSubcapitulos(Integer.parseInt(a.get(0).toString())).getIdcapituloSubcapitulosParsed());
   }
 
 protected StringBuffer updateReferenciaResponseCallBack(String s)
 {
  ArrayList a = AjaxUtils.splitIdFields(s);
    	return new StringBuffer(SubcapitulosManager.getSubcapitulos(Integer.parseInt(a.get(0).toString())).getReferenciaSubcapitulosParsed());
   }
 
 protected StringBuffer updateNombreResponseCallBack(String s)
 {
  ArrayList a = AjaxUtils.splitIdFields(s);
    	return new StringBuffer(SubcapitulosManager.getSubcapitulos(Integer.parseInt(a.get(0).toString())).getNombreSubcapitulosParsed());
   }
 
 public void serviceDeleteSubcapitulos(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 int idBorrar=-1;
	 idBorrar=WebUtils.getintParam(request, "borrarId");
	 if (idBorrar!=-1)
		 if (SubcapitulosManager.borraSubcapitulos(idBorrar))
			 WebUtils.writeXmlResponse(response,XmlUtils.buildXmlOKResponse("ISO-8859-1"));
		 else
			 WebUtils.writeXmlResponse(response,XmlUtils.buildXmlNotOKResponse("ISO-8859-1"));			 
 } 
 
 public void serviceSubcapitulosElement(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
  StringBuffer cadena=null;
  Criteria c= new Criteria();
  int claveId=-1;
  claveId=WebUtils.getintParam(request, "subcapitulos.IDSUBCAPITULO");
  if (claveId!=-1)
  {
	  c.add(SubcapitulosPeer.IDSUBCAPITULO, claveId);
  }
  c.addAscendingOrderByColumn(SubcapitulosPeer.IDSUBCAPITULO);
  SubcapitulosGroupBean trgb = SubcapitulosManager.getSubcapituloss(c);
  
  if (trgb.getTotalSize()!=0)
  {
	  String [] parametros={
			  SubcapitulosHelper.IDSUBCAPITULO_GET_METHOD_NAME,
			  SubcapitulosHelper.REFERENCIA_GET_METHOD_NAME+"SubcapitulosParsed",
			  SubcapitulosHelper.NOMBRE_GET_METHOD_NAME+"SubcapitulosParsed",
			  SubcapitulosHelper.IDCAPITULO_GET_METHOD_NAME+"SubcapitulosParsed"	  
	  			};
	  cadena=trgb.buildXml(parametros,null,"ISO-8859-1");
  }
  xmlResponseService(response, cadena);
 } 
 
 public void serviceSubcapitulosCapitulo(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
  String cadena=null;
  Criteria c= new Criteria();
  int claveId=-1;
  claveId=WebUtils.getintParam(request, "capitulos.IDCAPITULO");
  if (claveId!=-1)
  {
	  c.add(CapitulosPeer.IDCAPITULO, claveId);
  }
  c.addAscendingOrderByColumn(CapitulosPeer.IDCAPITULO);
  CapitulosGroupBean trgb = CapitulosManager.getCapituloss(c);
  
  if (trgb.getTotalSize()!=0)
  {
	  cadena = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>";
	  cadena = cadena + "<result><subcapitulos.IDCAPITULO>" + trgb.getCapitulos(0).getIdcapitulo() + "-" + trgb.getCapitulos(0).getNombreCapitulosParsed() + "</subcapitulos.IDCAPITULO></result>";
  }
  
  xmlResponseService(response, new StringBuffer(cadena));
 }  
 
 public void serviceGetSubcapitulosDetallePdf(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 utf8RequestService(request);
	 String[] getMethodos= new String[] {
			  SubcapitulosHelper.IDSUBCAPITULO_GET_METHOD_NAME,
			  SubcapitulosHelper.REFERENCIA_GET_METHOD_NAME+"SubcapitulosParsed",
			  SubcapitulosHelper.NOMBRE_GET_METHOD_NAME+"SubcapitulosParsed",
			  SubcapitulosHelper.IDCAPITULO_GET_METHOD_NAME+"SubcapitulosParsed"	
			 };
	  
	 
	 SubcapitulosGroupBean tgb = new SubcapitulosGroupBean();
	 try
	{
		tgb.setElemento(SubcapitulosHelper.getSubcapitulos(request));
	} catch (TorqueException e)
	{
		logger.severe(e.getMessage());
	}
	
	 byte[] content =  PdfUtils.getBytes(replaceStringBuffer(tgb.buildXml(getMethodos, null,"ISO-8859-1"),"n/a"," "), subcapitulo_transformer,"ISO-8859-1");
	   response.addHeader("content-disposition","attachment;filename=subcapituloDetalle.pdf");
	   response.setContentType("application/pdf");
	   response.setHeader("Cache-Control", "");//para que funcione en IE
	   response.setContentLength(content.length);
	   response.getOutputStream().write(content);
	   response.getOutputStream().flush();  
	   response.getOutputStream().close();
	
 }  
 
 public void serviceSubcapitulosTableContentPdf(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 utf8RequestService(request);
	  Criteria c= new Criteria();
	  String paramQuery =  WebUtils.getStringParam(request, "query");
	  if ((paramQuery != null)&& (paramQuery.compareTo("")!=0) )
		  c = SubcapitulosManager.buildSearchCriteria(paramQuery);   
	  c =criteriaSubcapitulosTableContent(request,c);		 
  
  SubcapitulosGroupBean tgb = SubcapitulosManager.getSubcapituloss(c);
  
  String[] methodos= new String[] {	
		  SubcapitulosHelper.REFERENCIA_GET_METHOD_NAME+"SubcapitulosParsed",
		  SubcapitulosHelper.NOMBRE_GET_METHOD_NAME+"SubcapitulosParsed",
		  SubcapitulosHelper.IDCAPITULO_GET_METHOD_NAME+"SubcapitulosParsed"
			};
  
	 byte[] content =  PdfUtils.getBytes(replaceStringBuffer(tgb.buildXml(methodos, null,"ISO-8859-1"),"n/a"," "), subcapitulos_transformer,"ISO-8859-1");
	   response.addHeader("content-disposition","attachment;filename=ListaSubcapitulo.pdf");
	   response.setContentType("application/pdf");
	   response.setHeader("Cache-Control", "");//para que funcione en IE
	   response.setContentLength(content.length);
	   response.getOutputStream().write(content);
	   response.getOutputStream().flush();  
	   response.getOutputStream().close();

 } 
 
}


