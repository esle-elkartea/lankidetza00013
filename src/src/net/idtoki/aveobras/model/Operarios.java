
package net.idtoki.aveobras.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Apr 19 12:33:52 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Operarios
    extends net.idtoki.aveobras.model.BaseOperarios
    implements Persistent
{
	private static final Logger logger = Logger.getLogger("net.idtoki.aveobras.controller.Operarios");
	
	public String getIdcategoriaOperariosParsed()
	{
		String categoria=null;
		try
		{
			categoria=this.getCategorias().getIdcategoria() + "-" + this.getCategorias().getDescripcionCategoriasParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar la categoria. public String getIdcategoriaOperariosParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(categoria);
	}
	public String getIdlocalidadOperariosParsed()
	{
		String localidad=null;
		try
		{
			localidad=this.getLocalidades().getIdlocalidad() + "-" + this.getLocalidades().getNombreLocalidadesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar la localidad. public String getIdlocalidadOperariosParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(localidad);
	}	
	public String getNombreOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getNombre());
	}
	public String getApellidounoOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getApellidouno());
	}
	public String getApellidodosOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getApellidodos());
	}
	public String getFechaaltaOperariosParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechaalta(),"-"));
	}
	public String getFechabajaOperariosParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechabaja(),"-"));
	}	
	public String getNifOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getNif());
	}	
	public String getNumerossOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getNumeross());
	}
	public String getReferenciaOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getReferencia());
	}
	public String getDireccionOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getDireccion());
	}
	public String getCpOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getCp());
	}
	public String getTelefonoOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getTelefono());
	}
	public String getMovilOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getMovil());
	}
	public String getEmailOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getEmail());
	}
	public String getCosteOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getCoste()+"");
	}
	public String getExternoOperariosParsed()
	{
		return FormatUtils.genericParsedStr(this.getExterno()+"");
	}
	public String getExternoOperariosParsed2()
	{
		String cadena=null;
		switch (this.getExterno())
		{
		case 1:
			cadena="Sí";
			break;
		default:
			cadena="No";
			break;
		}
		return FormatUtils.genericParsedStr(cadena);
	}
	public String getDeleteOperarios()
	{
		return "<a href='#' class='eliminar' id='getDeleteOperarios" + this.getIdoperario() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditOperarios()
	{
		return "<a href='#' class='edicion' id='getEditOperarios" + this.getIdoperario() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
}
