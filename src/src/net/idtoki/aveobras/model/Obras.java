
package net.idtoki.aveobras.model;


import java.lang.Float;
import java.util.logging.Logger;

import net.idtoki.aveobras.manager.ObrasManager;
import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Apr 19 12:33:52 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Obras
    extends net.idtoki.aveobras.model.BaseObras
    implements Persistent
{
	private static final Logger logger = Logger.getLogger("net.idtoki.aveobras.controller.Obras");
	
	public String getNombreObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getNombre());
	}
	public String getNumerocontratoObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getNumerocontrato());
	}
	public String getIdclienteObrasParsed()
	{
		String nombre=null;
		try
		{
			 nombre= this.getClientes().getIdcliente() + "-" + this.getClientes().getCifClientesParsed()+ "-" + this.getClientes().getNombreClientesParsed();	
		}
		catch(TorqueException te)
		{
			logger.severe("No se ha podido localizar el nombre. public String getIdclienteParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(nombre);
	}
	public String getIdlocalidadObrasParsed()
	{
		String localidad=null;
		try
		{
			localidad=this.getLocalidades().getIdlocalidad() + "-" + this.getLocalidades().getNombreLocalidadesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar el modelo. public String getIdlocalidadParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(localidad);
	}	
	public String getFechaaltaObrasParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechaalta(),"-"));
	}	
	public String getFechacomienzoObrasParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechacomienzo(),"-"));
	}
	public String getFechafinObrasParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechafin(),"-"));
	}
	public String getCalleObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getCalle());
	}	
	public String getCpObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getCp());
	}	
	public String getJornadasObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getJornadas()+"");
	}	
	public String getObservacionesObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getObservaciones());
	}
	public String getReferenciaObrasParsed()
	{
		return FormatUtils.genericParsedStr(this.getReferencia());
	}
	public String getImporteObrasParsed()
	{
		float importe=0;
		importe=ObrasManager.getImporteObras(this.getIdobra());
		return FormatUtils.genericParsedStr(Float.toString(importe));
	}
	public String getDeleteObras()
	{
		return "<a href='#' class='eliminar' id='getDeleteObras" + this.getIdobra() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getDuplicarObras()
	{
		return "<a href='#' class='duplicar' id='getDuplicarObras" + this.getIdobra() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditObras()
	{
		return "<a href='#' class='edicion' id='getEditObras" + this.getIdobra() + "'>&#160;&#160;&#160;&#160;</a>";
	}		
}
